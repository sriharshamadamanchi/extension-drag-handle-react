!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@tiptap-pro/extension-drag-handle"),require("react")):"function"==typeof define&&define.amd?define(["exports","@tiptap-pro/extension-drag-handle","react"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self)["@tiptap-pro/extension-drag-handle-react"]={},e.extensionDragHandle,e.React)}(this,(function(e,n,t){"use strict";function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var l=r(t);const a=e=>{const{className:r="drag-handle",children:a,editor:i,pluginKey:u=n.dragHandlePluginDefaultKey,onNodeChange:o,tippyOptions:d={}}=e,[s,p]=t.useState(null),c=t.useRef(null);return t.useEffect((()=>s?i.isDestroyed?()=>{c.current=null}:(c.current||(c.current=n.DragHandlePlugin({editor:i,element:s,pluginKey:u,tippyOptions:d,onNodeChange:o}),i.registerPlugin(c.current)),()=>{i.unregisterPlugin(u),c.current=null}):()=>{c.current=null}),[s,i,o,u]),l.default.createElement("div",{className:r,ref:p},a)};e.DragHandle=a,e.default=a,Object.defineProperty(e,"__esModule",{value:!0})}));
